{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "defaultValue": "xadmin",
            "metadata": {
                "description": "User name for the Virtual Machine."
            },
            "type": "string"
        },
        "adminPassword": {
            "metadata": {
                "description": "Password to login to the Virtual Machine."
            },
            "type": "securestring"
        },
        "dnsLabel": {
            "defaultValue": "REQUIRED",
            "metadata": {
                "description": "Unique DNS Name for the Public IP address used to access the Virtual Machine."
            },
            "type": "string"
        },
        "instanceName": {
            "defaultValue": "biqvm01",
            "metadata": {
                "description": "Name of the Virtual Machine."
            },
            "type": "string"
        },
        "instanceType": {
            "allowedValues": [
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F4S",
                "Standard_F8S",
                "Standard_F16S",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5"
            ],
            "defaultValue": "Standard_DS4_v2",
            "metadata": {
                "description": "Azure instance size of the Virtual Machine."
            },
            "type": "string"
        },
        "bigIqVersion": {
            "allowedValues": [
                "6.0.100813"
            ],
            "defaultValue": "6.0.100813",
            "metadata": {
                "description": "F5 BIG-IQ version you want to use."
            },
            "type": "string"
        },
        "vnetName": {
            "metadata": {
                "description": "The name of the existing virtual network to which you want to connect the BIG-IP VEs."
            },
            "type": "string"
        },
        "mgmtSubnetName": {
            "defaultValue": "default",
            "metadata": {
                "description": "Name of the existing MGMT subnet - with external access to the Internet."
            },
            "type": "string"
        },
        "mgmtIpAddress": {
            "metadata": {
                "description": "MGMT subnet IP Address to use for the BIG-IQ management IP address."
            },
            "type": "string"
        },
        "restrictedSrcAddress": {
            "defaultValue": "*",
            "metadata": {
                "description": "This field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources"
            },
            "type": "string"
        },
        "License": {
            "defaultValue": "REQUIRED",
            "metadata": {
                "description": "The license token for the F5 BIG-IQ VE (BYOL)."
            },
            "type": "string"
        },
        "ntpServer": {
            "defaultValue": "0.pool.ntp.org",
            "metadata": {
                "description": "Leave the default NTP server the BIG-IP uses, or replace the default NTP server with the one you want to use."
            },
            "type": "string"
        },
        "timeZone": {
            "defaultValue": "UTC",
            "metadata": {
                "description": "If you would like to change the time zone the BIG-IP uses, enter the time zone you want to use. This is based on the tz database found in /usr/share/zoneinfo. Example values: UTC, US/Pacific, US/Eastern, Europe/London or Asia/Singapore."
            },
            "type": "string"
        },
        "allowUsageAnalytics": {
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes",
            "metadata": {
                "description": "This deployment can send anonymous statistics to F5 to help us determine how to improve our solutions. If you select **No** statistics are not sent."
            },
            "type": "string"
        },
        "avSetChoice": {
            "defaultValue": "CREATE_NEW",
            "metadata": {
                "description": "If you want the VM placed in a new Azure Availability Set, leave the default value of **CREATE_NEW**, otherwise specify the name of the existing Availability Set you want to use. Note: If you are using an existing AV Set, this deployment must be in the same Azure Resource Group as the AV Set."
            },
            "type": "string"
        }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "computeApiVersion": "2017-12-01",
        "networkApiVersion": "2017-11-01",
        "storageApiVersion": "2017-10-01",
        "location": "[resourceGroup().location]",
        "subscriptionID": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "vnetResourceGroupName": "[resourceGroup().name]",
        "authenticationType": "password",
        "customImage1": "OPTIONAL",
        "bigIpVersion": "latest",
        "licensePoolKeys": "Do_Not_Create",
        "regPoolKeys": "Do_Not_Create",
        "adminPasswordOrKey": "[replace(parameters('adminPassword'),'\\n', '\n')]",
        "singleQuote": "'",
        "f5CloudLibsTag": "v4.4.0",
        "f5CloudLibsAzureTag": "v2.4.0",
        "dnsLabel": "[toLower(parameters('dnsLabel'))]",
        "bigIqLicenseKey1": "[parameters('License')]",
        "numberOfInternalIps": "0",
        "instanceName": "[toLower(parameters('instanceName'))]",
        "newAvailabilitySetName": "[concat(variables('dnsLabel'), '-avset')]",
        "availabilitySetName": "[replace(parameters('avSetChoice'), 'CREATE_NEW', variables('newAvailabilitySetName'))]",
        "vmname": "[concat(variables('dnsLabel'), '-', variables('instanceName'))]",
        "newStorageAccountName0": "[concat(uniqueString(variables('dnsLabel'), resourceGroup().id, deployment().name), 'stor0')]",
        "newDataStorageAccountName": "[concat(uniqueString(variables('dnsLabel'), resourceGroup().id, deployment().name), 'data000')]",
        "virtualNetworkName": "[parameters('vnetName')]",
        "vnetId": "[resourceId(variables('vnetResourceGroupName'),'Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "publicIPAddressType": "Static",
        "intSubnetPrivateAddress": "[parameters('mgmtIpAddress')]",
        "mgmtPublicIPAddressName": "[concat(variables('dnsLabel'), '-mgmt-pip')]",
        "mgmtPublicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('mgmtPublicIPAddressName'))]",
        "mgmtSubnetPrivateAddress": "[parameters('mgmtIpAddress')]",
        "mgmtNsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(variables('dnsLabel'),'-mgmt-nsg'))]",
        "mgmtNicName": "[concat(variables('dnsLabel'), '-mgmt')]",
        "mgmtNicID": "[resourceId('Microsoft.Network/NetworkInterfaces', variables('mgmtNicName'))]",
        "mgmtSubnetName": "[parameters('mgmtSubnetName')]",
        "mgmtSubnetId": "[concat(variables('vnetId'), '/subnets/', variables('mgmtSubnetName'))]",
        "mgmtRouteGw": "`tmsh list sys management-route default gateway | grep gateway | sed 's/gateway //;s/ //g'`",
        "bigIqLicenseSkuKeyword1": "OPTIONAL",
        "bigIqLicenseUnitOfMeasure": "OPTIONAL",
        "newDataStorageAccountName": "[concat(uniqueString(variables('dnsLabel'), resourceGroup().id, deployment().name), 'data000')]",
        "dataStorageAccountType": "Standard_LRS",
        "bigIpMgmtPort": "443",
        "deploymentId": "[concat(variables('subscriptionId'), resourceGroup().id, deployment().name, variables('dnsLabel'))]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "keyData": "[variables('adminPasswordOrKey')]",
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                    }
                ]
            }
        },
        "tagValues": {
                "application": "APP",
                "cost": "COST",
                "environment": "ENV",
                "group": "GROUP",
                "owner": "OWNER"
            },
        "allowUsageAnalytics": {
            "No": {
                "hashCmd": "echo AllowUsageAnalytics:No",
                "metricsCmd": ""
            },
            "Yes": {
                "hashCmd": "[concat('custId=`echo \"', variables('subscriptionId'), '\"|sha512sum|cut -d \" \" -f 1`; deployId=`echo \"', variables('deploymentId'), '\"|sha512sum|cut -d \" \" -f 1`')]",
                "metricsCmd": "[concat(' --metrics customerId:${custId},deploymentId:${deployId},templateName:standalone_1nic-existing-stack-experimental,templateVersion:5.5.0.0,region:', variables('location'), ',bigIpVersion:', variables('bigIpVersion') ,',licenseType:bigiq,cloudLibsVersion:', variables('f5CloudLibsTag'), ',cloudName:azure')]"
            }
        },
        "skuToUse": "f5-bigiq-virtual-edition-byol",
        "offerToUse": "f5-big-iq",
        "imagePlan": {
            "name": "[variables('skuToUse')]",
            "product": "[variables('offerToUse')]",
            "publisher": "f5-networks"
        },
        "imageReference": {
            "sku": "f5-bigiq-virtual-edition-byol",
            "publisher": "f5-networks",
            "version": "6.0.101000",
            "offer": "f5-big-iq"
        },
        "premiumInstanceArray": [
            "Standard_DS2",
            "Standard_DS3",
            "Standard_DS4",
            "Standard_DS11",
            "Standard_DS12",
            "Standard_DS13",
            "Standard_DS14",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2",
            "Standard_DS11_v2",
            "Standard_DS12_v2",
            "Standard_DS13_v2",
            "Standard_DS14_v2",
            "Standard_DS15_v2",
            "Standard_F2S",
            "Standard_F4S",
            "Standard_F8S",
            "Standard_F16S",
            "Standard_GS2",
            "Standard_GS3",
            "Standard_GS4",
            "Standard_GS5"
        ],
        "customImage": "[replace(variables('customImage1'), 'OPTIONAL', '')]",
        "useCustomImage": "[not(empty(variables('customImage')))]",
        "createNewCustomImage": "[contains(variables('customImage'), 'https://')]",
        "newCustomImageName": "[concat(variables('dnsLabel'), 'image')]",
        "storageProfileArray": {
            "customImage": {
                "imageReference": {
                    "id": "[if(variables('createNewCustomImage'), resourceId('Microsoft.Compute/images', variables('newCustomImageName')), variables('customImage'))]"
                }
            },
            "platformImage": {
                "imageReference": "[variables('imageReference')]",
                "osDisk": {
                    "createOption": "FromImage"
                }
            }
        },
        "initScript": "",
        "customConfig": "### START (INPUT) CUSTOM CONFIGURATION HERE\nlocation=$(curl  --interface mgmt -H metadata:true \"http://169.254.169.254/metadata/instance?api-version=2017-08-01\" --stderr /dev/null |jq .compute.location)\n#location=\"\"usgovvirginia\"\"\necho $location | grep -i -E \"(gov|dod)\" > /dev/null;\n#echo $?\nif [ $? == 0 ]\n  then\n  curl https://raw.githubusercontent.com/chen23/f5-cloud-libs-azure/chen-azureusgovernment-1.5/scripts/failoverProvider.js > /config/cloud/azure/node_modules/f5-cloud-libs/node_modules/f5-cloud-libs-azure/scripts/failoverProvider.js\n  else\n  curl https://raw.githubusercontent.com/chen23/f5-cloud-libs-azure/chen-1.5/scripts/failoverProvider.js > /config/cloud/azure/node_modules/f5-cloud-libs/node_modules/f5-cloud-libs-azure/scripts/failoverProvider.js\nfi\n\nf5-rest-node /config/cloud/azure/node_modules/f5-cloud-libs/node_modules/f5-cloud-libs-azure/scripts/failoverProvider.js\n",
        "installCustomConfig": "[concat(variables('singleQuote'), '#!/bin/bash\n', variables('customConfig'), variables('singleQuote'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('dnsLabel'), '-mgmt-nsg')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "tags": {},
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "priority": 1000,
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "mgmt_allow_https",
                        "properties": {
                            "access": "Allow",
                            "description": "",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "direction": "Inbound",
                            "priority": 101,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                            "sourcePortRange": "*"
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('mgmtPublicIPAddressName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[variables('location')]",
            "tags": {},
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabel')]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('mgmtNicName'), '0')]",
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[variables('mgmtNsgID')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('mgmtPublicIPAddressName'))]"
            ],
            "location": "[variables('location')]",
            "tags": {},
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('dnsLabel'), '-mgmt-ipconfig')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('mgmtPublicIPAddressName'))]"
                            },
                            "privateIPAddress": "[variables('mgmtSubnetPrivateAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('mgmtSubnetId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('mgmtNsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "tags": "[if(empty(variables('tagValues')), json('null'), variables('tagValues'))]",
            "condition": "[equals(toUpper(parameters('avSetChoice')), 'CREATE_NEW')]",
            "location": "[variables('location')]",
            "properties": {
                "PlatformFaultDomainCount": 2,
                "PlatformUpdateDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }

        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newDataStorageAccountName')]",
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[variables('location')]",
            "kind": "Storage",
            "properties": {
                "supportsHttpsTrafficOnly": true
            },
            "sku": {
                "name": "[variables('dataStorageAccountType')]",
                "tier": "Standard"
            },
            "tags": "[if(empty(variables('tagValues')), json('null'), variables('tagValues'))]"
        },
        {
            "type": "Microsoft.Compute/images",
            "name": "[variables('newCustomImageName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "condition": "[and(variables('useCustomImage'), variables('createNewCustomImage'))]",
            "location": "[variables('location')]",
            "properties": {
                "storageProfile": {
                    "osDisk": {
                        "blobUri": "[variables('customImage')]",
                        "osState": "Generalized",
                        "osType": "Linux",
                        "storageAccountType": "[if(contains(variables('premiumInstanceArray'), parameters('instanceType')), 'Premium_LRS', 'Standard_LRS')]"
                    }
                }
            },
            "tags": "[if(empty(variables('tagValues')), json('null'), variables('tagValues'))]"
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmname')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[variables('location')]",
            "plan": {
                "publisher": "f5-networks",
                "product": "f5-big-iq",
                "name": "f5-bigiq-virtual-edition-byol",
                "promotionCode": null
            },
            "tags": {},
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('newDataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "storageProfile": "[if(variables('useCustomImage'), variables('storageProfileArray').customImage, variables('storageProfileArray').platformImage)]",
                "osProfile": {
                    "adminUsername": "[parameters('adminUsername')]",
                    "computerName": "[variables('vmname')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": "[if(equals(variables('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('mgmtNicName'), '0'))]",
                            "properties": {
                                "primary": true
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newDataStorageAccountName'))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('mgmtNicName'), '0')]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "[variables('computeApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmname'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('vmname'), '/start')]",
                "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat('mkdir -p /var/log/cloud/azure; mkdir -p /config/cloud; echo ', variables('initScript'), ' | /usr/bin/base64 -d > /config/cloud/init.sh; chmod +x /config/cloud/init.sh;', ' /config/cloud/init.sh --cloud azure --log-level debug --data-interface eth1 --license ', variables('bigIqLicenseKey1'), ' --ntp ', parameters('ntpServer'), ' --timezone ', parameters('timeZone'), ' --create-license-pool ', variables('licensePoolKeys'), ' --create-reg-key-pool ', variables('regPoolKeys'), ' --fcl-tag ', variables('f5CloudLibsTag'), ' --fcl-cloud-tag ', variables('f5CloudLibsAzureTag'), ' --vlan ', variables('singleQuote'), 'n:internal,nic:1.1', variables('singleQuote'), ' --self-ip ', variables('singleQuote'), 'n:internal_self,a:', variables('intSubnetPrivateAddress'), ',v:internal,i:eth1', variables('singleQuote'), ' --usage-analytics ', variables('singleQuote'), 'send:', parameters('allowUsageAnalytics'), ',r:', variables('location'), ',cI:', variables('subscriptionID'), ',dI:', variables('deploymentId'), ',cN:aws,lT:byol,bIV:6.0.0,tN:f5-existing-stack-byol-2nic-bigiq,tV:4.3.0', variables('singleQuote'), ' &>> /var/log/cloud/azure/install.log &')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "tags": "[if(empty(variables('tagValues')), json('null'), variables('tagValues'))]"
        }
    ],
    "outputs": {
        "GUI-URL": {
            "type": "string",
            "value": "[concat('https://', reference(variables('mgmtPublicIPAddressId')).dnsSettings.fqdn, ':', variables('bigIqpMgmtPort'))]"
        },
        "SSH-URL": {
            "type": "string",
            "value": "[concat(reference(variables('mgmtPublicIPAddressId')).dnsSettings.fqdn, ' ',22)]"
        }
    }
}
